name: CI

on:
  push:
    branches:
      - '*-dev'
    paths-ignore:
      - '.idea/**'
      - '.gitattributes'
      - '.github/**.json'
      - '.gitignore'
      - '.gitmodules'
      - '**.md'
      - 'LICENSE'
      - 'NOTICE'
  pull_request:
    paths-ignore:
      - '.idea/**'
      - '.gitattributes'
      - '.github/**.json'
      - '.gitignore'
      - '.gitmodules'
      - '**.md'
      - 'LICENSE'
      - 'NOTICE'
  workflow_dispatch:
  workflow_call:

jobs:
  build-release-apk:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 21
      - uses: gradle/actions/setup-gradle@v3
        with:
          cache-encryption-key: Da25KUVSE5jbGds2zXmfXw==
          gradle-home-cache-cleanup: true
      - name: Write sign info
        if: github.repository == 'LawnchairLauncher/lawnchair'
        run: |
          if [ ! -z "${{ secrets.KEYSTORE }}" ]; then
            echo storePassword='${{ secrets.KEYSTORE_PASSWORD }}' >> keystore.properties
            echo keyAlias='${{ secrets.KEY_ALIAS }}' >> keystore.properties
            echo keyPassword='${{ secrets.KEY_PASSWORD }}' >> keystore.properties
            echo storeFile='${{ github.workspace }}/key.jks' >> keystore.properties
            echo ${{ secrets.KEYSTORE }} | base64 --decode > ${{ github.workspace }}/key.jks
          fi
      - name: Build release APK
        run: ./gradlew assembleLawnWithQuickstepGithubRelease
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Release APK
          path: |
            build/outputs/apk/*

  check-style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 21
      - uses: gradle/actions/setup-gradle@v3
        with:
          gradle-home-cache-cleanup: true
      - run: ./gradlew spotlessCheck

  nightly-release:
    runs-on: ubuntu-latest
    if: github.repository_owner == 'LawnchairLauncher' && github.event_name == 'push' && github.ref == 'refs/heads/14-dev'
    needs: build-release-apk
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      # Note the # and () symbols are not supported in GitHub Release filenames, even manually
      - name: Export APK_NAME for later use
        run: echo "APK_NAME=Lawnchair.Debug.${{ github.ref_name }}.Nightly-CI_${{ github.run_number }}-$(echo ${{ github.sha }} | cut -c1-7).apk" >> $GITHUB_ENV
      - name: Rename .apk file
        run: mv "./Release APK/lawnWithQuickstepGithub/release/"*.apk "./$APK_NAME"
      - name: Delete release if exist then create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release view "nightly" && gh release delete "nightly" -y --cleanup-tag
          gh release create "nightly" "./$APK_NAME" -p -t "Lawnchair Nightly" --generate-notes
